package com.raitcon.hibernate.bean;
// Generated 25/03/2016 09:41:30 AM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DetalleExamen generated by hbm2java
 */
@Entity
@Table(name="detalle_examen"
    ,catalog="db_laboratorio"
)
public class DetalleExamen  implements java.io.Serializable {


     private int iddetalleExamen;
     private Examen examen;
     private String descripcion;
     private Set<SubDetExamen> subDetExamens = new HashSet<SubDetExamen>(0);

    public DetalleExamen() {
    }

	
    public DetalleExamen(int iddetalleExamen, Examen examen) {
        this.iddetalleExamen = iddetalleExamen;
        this.examen = examen;
    }
    public DetalleExamen(int iddetalleExamen, Examen examen, String descripcion, Set<SubDetExamen> subDetExamens) {
       this.iddetalleExamen = iddetalleExamen;
       this.examen = examen;
       this.descripcion = descripcion;
       this.subDetExamens = subDetExamens;
    }
   
     @Id 
    
    @Column(name="iddetalle_examen", unique=true, nullable=false)
    public int getIddetalleExamen() {
        return this.iddetalleExamen;
    }
    
    public void setIddetalleExamen(int iddetalleExamen) {
        this.iddetalleExamen = iddetalleExamen;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idexamen", nullable=false)
    public Examen getExamen() {
        return this.examen;
    }
    
    public void setExamen(Examen examen) {
        this.examen = examen;
    }
    
    @Column(name="descripcion", length=80)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="detalleExamen")
    public Set<SubDetExamen> getSubDetExamens() {
        return this.subDetExamens;
    }
    
    public void setSubDetExamens(Set<SubDetExamen> subDetExamens) {
        this.subDetExamens = subDetExamens;
    }




}



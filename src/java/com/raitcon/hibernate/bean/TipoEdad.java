package com.raitcon.hibernate.bean;
// Generated 09/05/2016 10:48:05 PM by Hibernate Tools 3.2.1.GA



import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TipoEdad generated by hbm2java
 */
@Entity
@Table(name="tipo_edad"
    ,catalog="db_laboratorio"
)
public class TipoEdad  implements java.io.Serializable {


     private int idTipoEdad;
     private String descripcion;
     private Character estado;
     private Set<ValRef> valRefs = new HashSet<ValRef>(0);
     private Set<ValRef> valRefs_1 = new HashSet<ValRef>(0);

    public TipoEdad() {
    }

	
    public TipoEdad(int idTipoEdad) {
        this.idTipoEdad = idTipoEdad;
    }
    public TipoEdad(int idTipoEdad, String descripcion, Character estado, Set<ValRef> valRefs, Set<ValRef> valRefs_1) {
       this.idTipoEdad = idTipoEdad;
       this.descripcion = descripcion;
       this.estado = estado;
       this.valRefs = valRefs;
       this.valRefs_1 = valRefs_1;
    }
   
     @Id 
    
    @Column(name="id_tipo_edad", unique=true, nullable=false)
    public int getIdTipoEdad() {
        return this.idTipoEdad;
    }
    
    public void setIdTipoEdad(int idTipoEdad) {
        this.idTipoEdad = idTipoEdad;
    }
    
    @Column(name="descripcion", length=45)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
    
    @Column(name="estado", length=1)
    public Character getEstado() {
        return this.estado;
    }
    
    public void setEstado(Character estado) {
        this.estado = estado;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tipoEdad")
    public Set<ValRef> getValRefs() {
        return this.valRefs;
    }
    
    public void setValRefs(Set<ValRef> valRefs) {
        this.valRefs = valRefs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tipoEdad")
    public Set<ValRef> getValRefs_1() {
        return this.valRefs_1;
    }
    
    public void setValRefs_1(Set<ValRef> valRefs_1) {
        this.valRefs_1 = valRefs_1;
    }




}



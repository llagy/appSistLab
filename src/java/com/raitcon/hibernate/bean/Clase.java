package com.raitcon.hibernate.bean;
// Generated 23/04/2016 06:58:33 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Clase generated by hbm2java
 */
@Entity
@Table(name="clase"
    ,catalog="db_laboratorio"
    , uniqueConstraints = {@UniqueConstraint(columnNames="IdClase"), @UniqueConstraint(columnNames="estado")} 
)
public class Clase  implements java.io.Serializable {


     private Integer idClase;
     private Grupo grupo;
     private String descripcion;
     private Integer idClase_1;
     private Integer codGrupo;
     private String desClase;
     private Integer estado;
     private Set<Examen> examensForIdClase = new HashSet<Examen>(0);
     private Set<Examen> examensForIdClase_1 = new HashSet<Examen>(0);

    public Clase() {
    }

    public Clase(Grupo grupo, String descripcion, Integer idClase_1, Integer codGrupo, String desClase, Integer estado, Set<Examen> examensForIdClase, Set<Examen> examensForIdClase_1) {
       this.grupo = grupo;
       this.descripcion = descripcion;
       this.idClase_1 = idClase_1;
       this.codGrupo = codGrupo;
       this.desClase = desClase;
       this.estado = estado;
       this.examensForIdClase = examensForIdClase;
       this.examensForIdClase_1 = examensForIdClase_1;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_clase", unique=true, nullable=false)
    public Integer getIdClase() {
        return this.idClase;
    }
    
    public void setIdClase(Integer idClase) {
        this.idClase = idClase;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_grupo")
    public Grupo getGrupo() {
        return this.grupo;
    }
    
    public void setGrupo(Grupo grupo) {
        this.grupo = grupo;
    }
    
    @Column(name="descripcion", length=80)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
    
    @Column(name="IdClase", unique=true)
    public Integer getIdClase_1() {
        return this.idClase_1;
    }
    
    public void setIdClase_1(Integer idClase_1) {
        this.idClase_1 = idClase_1;
    }
    
    @Column(name="CodGrupo")
    public Integer getCodGrupo() {
        return this.codGrupo;
    }
    
    public void setCodGrupo(Integer codGrupo) {
        this.codGrupo = codGrupo;
    }
    
    @Column(name="DesClase", length=80)
    public String getDesClase() {
        return this.desClase;
    }
    
    public void setDesClase(String desClase) {
        this.desClase = desClase;
    }
    
    @Column(name="estado", unique=true)
    public Integer getEstado() {
        return this.estado;
    }
    
    public void setEstado(Integer estado) {
        this.estado = estado;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="claseByIdClase_1")
    public Set<Examen> getExamensForIdClase() {
        return this.examensForIdClase;
    }
    
    public void setExamensForIdClase(Set<Examen> examensForIdClase) {
        this.examensForIdClase = examensForIdClase;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="claseByIdClase")
    public Set<Examen> getExamensForIdClase_1() {
        return this.examensForIdClase_1;
    }
    
    public void setExamensForIdClase_1(Set<Examen> examensForIdClase_1) {
        this.examensForIdClase_1 = examensForIdClase_1;
    }




}


